{"version":3,"sources":["components/Button.js","components/Footer.js","assets/Eth_loading.gif","components/Spinner.js","components/Splash.js","App.js","index.js"],"names":["Button","props","onClick","className","title","Footer","class","href","target","fill","viewBox","d","Spinner","src","spinner","alt","style","width","margin","display","Splash","useState","currentAccount","setCurrentAccount","mining","setMining","editionNo","setEditionNo","collectionLimit","setCollectionLimit","CONTRACT_ADDRESS","contractABI","DuppyABI","abi","checkIfWalletIsConnected","a","window","ethereum","console","log","request","method","accounts","length","account","setupEventListener","getEditionNumber","connectWallet","alert","provider","ethers","providers","Web3Provider","signer","getSigner","Contract","on","from","tokenId","toNumber","error","mintNFT","duppyNFT","makeAnEpicNFT","nftTxn","wait","hash","message","getMintedAmount","nftNoTxn","toString","useEffect","height","App","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c231148.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={props.onClick}\r\n        className='bg-gradient-to-r from-green-400 to-blue-500 hover:from-pink-500 hover:to-yellow-500 uppercase font-bold transform h-8 w-32 text-sm md:text-lg md:h-16 md:w-64 md:px-10 rounded-lg hover:font-black hover:shadow-2xl hover:-translate-y-0.5 my-2 sm:my-4'\r\n      >\r\n        {props.title}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div class='max-w-7xl mx-auto py-2 px-4 overflow-hidden sm:px-6 lg:px-8'>\r\n        <div class='mt-6 flex justify-center space-x-6'>\r\n          <a\r\n            href='https://twitter.com/J_Magoo'\r\n            target='_blank'\r\n            class='text-gray-400 hover:text-gray-500'\r\n          >\r\n            <span class='sr-only'>Twitter</span>\r\n            <svg\r\n              class='h-6 w-6'\r\n              fill='currentColor'\r\n              viewBox='0 0 24 24'\r\n              aria-hidden='true'\r\n            >\r\n              <path d='M8.29 20.251c7.547 0 11.675-6.253 11.675-11.675 0-.178 0-.355-.012-.53A8.348 8.348 0 0022 5.92a8.19 8.19 0 01-2.357.646 4.118 4.118 0 001.804-2.27 8.224 8.224 0 01-2.605.996 4.107 4.107 0 00-6.993 3.743 11.65 11.65 0 01-8.457-4.287 4.106 4.106 0 001.27 5.477A4.072 4.072 0 012.8 9.713v.052a4.105 4.105 0 003.292 4.022 4.095 4.095 0 01-1.853.07 4.108 4.108 0 003.834 2.85A8.233 8.233 0 012 18.407a11.616 11.616 0 006.29 1.84' />\r\n            </svg>\r\n          </a>\r\n\r\n          <a\r\n            href='https://github.com/jamesmagoo'\r\n            target='_blank'\r\n            class='text-gray-400 hover:text-gray-500'\r\n          >\r\n            <span class='sr-only'>GitHub</span>\r\n            <svg\r\n              class='h-6 w-6'\r\n              fill='currentColor'\r\n              viewBox='0 0 24 24'\r\n              aria-hidden='true'\r\n            >\r\n              <path\r\n                fill-rule='evenodd'\r\n                d='M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z'\r\n                clip-rule='evenodd'\r\n              />\r\n            </svg>\r\n          </a>\r\n        </div>\r\n        <p class='mt-8 text-center text-sm font-thin text-gray-600'>\r\n          &copy; 2021 James McGauran\r\n        </p>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/Eth_loading.b8d0739d.gif\";","import React, { Fragment } from 'react';\r\nimport spinner from '../assets/Eth_loading.gif';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=''>\r\n        <img\r\n          src={spinner}\r\n          alt='Loading...'\r\n          style={{ width: '64px', margin: 'auto', display: 'block' }}\r\n        />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useEffect, useState } from 'react';\r\nimport Button from './Button';\r\nimport Footer from './Footer';\r\nimport { ethers } from 'ethers';\r\nimport DuppyABI from '../utils/DuppyABI.json';\r\nimport Spinner from './Spinner';\r\n\r\nconst Splash = () => {\r\n  const [currentAccount, setCurrentAccount] = useState('');\r\n  const [mining, setMining] = useState('');\r\n  const [editionNo, setEditionNo] = useState('');\r\n  const [collectionLimit, setCollectionLimit] = useState('');\r\n\r\n  const CONTRACT_ADDRESS = '0x2131623a08c2A7D42C16dBa4134ed763A20c5eFD';\r\n  const contractABI = DuppyABI.abi;\r\n\r\n  const checkIfWalletIsConnected = async () => {\r\n    const { ethereum } = window;\r\n    if (!ethereum) {\r\n      console.log('Make sure you have metamask!');\r\n      return;\r\n    } else {\r\n      console.log('We have the ethereum object', ethereum);\r\n    }\r\n    //Check if we're authorized to access the user's wallet\r\n    const accounts = await ethereum.request({ method: 'eth_accounts' });\r\n\r\n    //User can have multiple authorized accounts, we grab the first one if its there!\r\n    if (accounts.length !== 0) {\r\n      const account = accounts[0];\r\n      console.log('Found an authorized account:', account);\r\n      setCurrentAccount(account);\r\n      // initialise eventListener\r\n      setupEventListener();\r\n      // update collection edition no.\r\n      getEditionNumber();\r\n    } else {\r\n      console.log('No authorized account found');\r\n    }\r\n  };\r\n\r\n  const connectWallet = async () => {\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (!ethereum) {\r\n        alert('Get Bloody Metamask');\r\n        return;\r\n      }\r\n\r\n      /*\r\n       * Fancy method to request access to account.\r\n       */\r\n      const accounts = await ethereum.request({\r\n        method: 'eth_requestAccounts',\r\n      });\r\n\r\n      /*\r\n       * Boom! This should print out public address once we authorize Metamask.\r\n       */\r\n      console.log('Connected', accounts[0]);\r\n      setCurrentAccount(accounts[0]);\r\n\r\n      // initialise eventListener\r\n      setupEventListener();\r\n\r\n      // update collection edition no.\r\n      getEditionNumber();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // Setup our listener.\r\n  const setupEventListener = async () => {\r\n    // Most of this looks the same as our function askContractToMintNft\r\n    try {\r\n      const { ethereum } = window;\r\n\r\n      if (ethereum) {\r\n        // initialise a provider\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        // get the signer\r\n        const signer = provider.getSigner();\r\n        // create an instance of the contract to interact with\r\n        const duppyNFT = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          contractABI,\r\n          signer\r\n        );\r\n\r\n        // This will essentially \"capture\" our event when our contract throws it.\r\n        // If you're familiar with webhooks, it's very similar to that!\r\n        duppyNFT.on('NFTMinted', (from, tokenId) => {\r\n          console.log(from, tokenId.toNumber());\r\n          getEditionNumber();\r\n          // alert(\r\n          //   `Hey there! We've minted your NFT and sent it to your wallet. It may be blank right now. It can take a max of 10 min to show up on OpenSea. Here's the link: https://testnets.opensea.io/assets/${CONTRACT_ADDRESS}/${tokenId.toNumber()}`\r\n          // );\r\n        });\r\n\r\n        console.log('Setup event listener!');\r\n        // update collection edition no.\r\n      } else {\r\n        console.log(\"Ethereum object doesn't exist!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const mintNFT = async () => {\r\n    try {\r\n      // get the ethereum object\r\n      const { ethereum } = window;\r\n      if (ethereum) {\r\n        // initialise a provider\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        // get the signer\r\n        const signer = provider.getSigner();\r\n        // create an instance of the contract to interact with\r\n        const duppyNFT = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          contractABI,\r\n          signer\r\n        );\r\n\r\n        // make calls to mint NFT\r\n        console.log('Going to pop wallet now to pay gas...');\r\n        let nftTxn = await duppyNFT.makeAnEpicNFT();\r\n\r\n        console.log('Mining...please wait.');\r\n        setMining(true);\r\n        await nftTxn.wait();\r\n\r\n        console.log(\r\n          `Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}`\r\n        );\r\n        setMining(false);\r\n      } else {\r\n        console.log('No ethereum object');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      alert(error.message);\r\n    }\r\n  };\r\n\r\n  // Render Methods\r\n  const renderNotConnectedContainer = () => (\r\n    <div className='py-10'>\r\n      <Button title='Connect Wallet' onClick={connectWallet} />\r\n    </div>\r\n  );\r\n\r\n  const getEditionNumber = async () => {\r\n    try {\r\n      // get the ethereum object\r\n      const { ethereum } = window;\r\n      if (ethereum) {\r\n        // initialise a provider\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        // get the signer\r\n        const signer = provider.getSigner();\r\n        // create an instance of the contract to interact with\r\n        const duppyNFT = new ethers.Contract(\r\n          CONTRACT_ADDRESS,\r\n          contractABI,\r\n          signer\r\n        );\r\n\r\n        // make calls to mint NFT\r\n        console.log('Checking how many NFTs are minted...');\r\n        let nftNoTxn = await duppyNFT.getMintedAmount();\r\n        setEditionNo(nftNoTxn[0].toString());\r\n        setCollectionLimit(nftNoTxn[1].toString());\r\n        console.log(\r\n          'There are %s NFTs minted! out of %s',\r\n          nftNoTxn[0].toString(),\r\n          nftNoTxn[1].toString()\r\n        );\r\n      } else {\r\n        console.log('No ethereum object');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const renderMining = () => (\r\n    <div>\r\n      Mining...\r\n      <Spinner />\r\n    </div>\r\n  );\r\n\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className='flex flex-col justify-start items-center h-auto pb-24'>\r\n        <div className='flex flex-col items-center border-4 bg-white border-black mt-10 rounded-md h-18 p-2 bg-gradient-to-r from-pink-500 to-yellow-500 '>\r\n          {/* <h1 className='font-bold'>NFTs MINTED: </h1> */}\r\n          <p className='text-center font-light uppercase'>Limited Edition</p>\r\n          <span className='font-bold'>\r\n            {editionNo}/{collectionLimit}{' '}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=' flex flex-row items-start mt-2 mb-16'>\r\n          <div>\r\n            <a\r\n              href={`https://rinkeby.rarible.com/collection/${CONTRACT_ADDRESS}`}\r\n            >\r\n              <p className='font-light mr-1'>View on Rarible </p>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <img\r\n              src='https://theme.zdassets.com/theme_assets/10342982/bb8d2a7ec0e54ad27a114410b18e9716a3bf9883.png'\r\n              alt=''\r\n              height='24'\r\n              width='24'\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className='items-center pb-12'>\r\n          <p className=' pb-6 text-6xl font-bold text-transparent bg-clip-text bg-gradient-to-r from-green-400 to-blue-500'>\r\n            DuppyNFT Collection\r\n          </p>\r\n          <div className='flex justify-center'>\r\n            <p className='text-lg font-normal'>🎭 Random word mash NFT's 🌀</p>\r\n          </div>\r\n        </div>\r\n        {currentAccount === '' ? (\r\n          renderNotConnectedContainer()\r\n        ) : mining === true ? (\r\n          renderMining()\r\n        ) : (\r\n          <Button onClick={mintNFT} title='Mint NFT' />\r\n        )}\r\n\r\n        {/* {mining === true ? renderMining() : null } */}\r\n        <Footer />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Splash;\r\n","import './App.css';\r\nimport { Fragment } from 'react';\r\nimport Splash from './components/Splash';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\nimport './App.css';\r\n\r\n// Constants\r\nconst OPENSEA_LINK = '';\r\nconst TOTAL_MINT_COUNT = 50;\r\n\r\nfunction App() {\r\n  // Render Methods\r\n  const renderNotConnectedContainer = () => (\r\n    <button className='cta-button connect-wallet-button'>\r\n      Connect to Wallet\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <Fragment>\r\n        <Routes>\r\n          <Route exact path='/duppy_NFT' element={<Splash />} />\r\n        </Routes>\r\n      </Fragment>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}